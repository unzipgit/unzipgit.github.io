function q(e){return document.querySelector(e)}function qq(e){return document.querySelectorAll(e)}function cl(e){console.log(e)}let filename="none",filesize="none";document.querySelector(".litext"),document.querySelector(".inputfile");let token,zipFile,preurl;const t={};let gsaploading=gsap.timeline({paused:!0});gsaploading.to(".logo",.3,{opacity:1,x:0}).to(".desc",.3,{opacity:1,x:0},0).to(".gsbox",.3,{opacity:1,y:0,stagger:.1},.15).to(".footer",.3,{opacity:1,y:0,stagger:.1},.6),q(".shadow").addEventListener("click",e=>{gsap.to(".shadow",.25,{autoAlpha:0}),gsap.to(".donat",.25,{autoAlpha:0}),gsap.to(".readme",.25,{autoAlpha:0})}),q(".donatlink").addEventListener("click",e=>{gsap.to(".shadow",.25,{visibility:"inherit",opacity:.5}),gsap.to(".donat",.25,{autoAlpha:1})}),q(".readmelink").addEventListener("click",e=>{gsap.to(".shadow",.25,{visibility:"inherit",opacity:.5}),gsap.to(".readme",.25,{autoAlpha:1})});const divinputtextall=qq(".litext input");divinputtextall.forEach(e=>{e.addEventListener("focus",e=>{if(e.target.parentNode.querySelector(".inputlabel").classList.add("ulet"),e.target.parentNode.querySelector(".tokendesc")&&gsap.to(".tokendesc",.2,{autoAlpha:0}),e.target.closest(".filegroup")){let a=Array.from(e.target.closest(".filegroup").children).find(a=>a!==e.target.parentNode);""===a.querySelector("input").value?gsap.to(a,.25,{opacity:.2}):gsap.to(e.target.parentNode,.25,{opacity:1})}}),e.addEventListener("blur",a=>{if(""===e.value.trim()&&(a.target.parentNode.querySelector(".inputlabel").classList.remove("ulet"),a.target.parentNode.querySelector(".tokendesc")&&gsap.to(".tokendesc",.2,{autoAlpha:1}),a.target.closest(".filegroup"))){let r=Array.from(a.target.closest(".filegroup").children).find(e=>e!==a.target.parentNode);""===a.target.value&&(gsap.to(r,.25,{opacity:1}),""!==r.querySelector("input").value&&gsap.to(a.target.parentNode,.25,{opacity:.2}))}})});const labelgroup=qq(".filegroup label");labelgroup.forEach(e=>{e.addEventListener("mouseenter",e=>{let a=Array.from(labelgroup).find(a=>a!==e.target);""===a.querySelector("input").value&&a.querySelector("input")!==document.activeElement?gsap.to(a,.25,{opacity:.2}):e.target.querySelector("input")===document.activeElement&&gsap.to(e.target.parentNode,.25,{opacity:1})}),e.addEventListener("mouseleave",e=>{if(""===e.target.querySelector("input").value){let a=Array.from(labelgroup).find(a=>a!==e.target);gsap.to(a,.25,{opacity:1})}})}),q(".ifdatainfo");var tl=gsap.timeline({paused:!0}).to(".inputfile span",.2,{autoAlpha:0,onComplete(){q(".inputfile span").style.display="none"},onReverseComplete(){q(".inputfile span").style.display="block",q(".ifdatainfo").style.display="none"}}).to(".ifdatainfo",.2,{autoAlpha:1,onStart(){q(".ifdatainfo").style.display="block",q(".ifname").innerHTML=filename,q(".ifsize").innerHTML=filesize}});q("#gitfile").addEventListener("change",e=>{q("#gitfilepath").parentNode.querySelector(".inputlabel").classList.contains("errlabel")&&q("#gitfilepath").parentNode.querySelector(".inputlabel").classList.remove("errlabel"),""===e.target.value?tl.reverse():(filename=(filename=e.target.files[0].name).length>8?filename.slice(0,6)+"...":filename,filesize=(e.target.files[0].size/1048576).toFixed(2)+" mb",tl.restart(),gsap.to(e.target.parentNode,.25,{opacity:1}),q("#gitfilepath").value="",q("#gitfilepath").dispatchEvent(new Event("blur")),gsap.to(q("#gitfilepath").parentNode,.25,{opacity:.2}))}),q("#gitfilepath").addEventListener("input",e=>{q("#gitfile").parentNode.querySelector(".inputlabel").classList.remove("errlabel"),""===q("#gitfile").value?gsap.to(q("#gitfilepath").parentNode,.25,{opacity:1}):(tl.reverse(),q("#gitfile").value=""),gsap.to(q("#gitfile").parentNode,.25,{opacity:.2})});const agr={def:"linear-gradient(00deg, #60676b, #a4a4a4)",error:"linear-gradient(00deg, #c40000, #ff8181)",success:"linear-gradient(0deg, #1b8705, #89e657)"};let atna=gsap.timeline({paused:!0}).set(".atn",{y:0,autoAlpha:0}).to(".atn",.3,{y:-10,autoAlpha:1});function ale(e=["title","description"],a="def",r=!1){r?gsap.to(".atn .closer",.2,{autoAlpha:1}):gsap.set(".atn .closer",{autoAlpha:0}),q(".atn").style.background=agr[a],q(".atn .title").innerHTML=e[0],q(".atn .info").innerHTML=e[1],atna.restart()}function aletxt(e,a){q(".atn .title").innerHTML=e,q(".atn .info").innerHTML=a}function errorHandler(e){let a={401:["invalid token","check the token and try again"],404:["not found","github responded with 404 error. check the data and try again"],1422:["validation error","check the fields and try again"],2e3:["download error 404","could not find the archive in the repository. check the data and try again"],2001:["download error 404","failed to download large archive"],2002:["download error",`failed to download archive: ${e.message}`],2003:["download error",`failed to download large archive: ${e.message}`],2004:["download error",e.message],2005:["upload error",e.message],2006:["upload error",`failed to write the file: ${e.message}`],2007:["upload error",`failed to overwrite the file: ${e.message}`],3400:["archive error",e.message],3401:["archive error","either it's not an archive or the file is corrupted"],4e3:["request error",`error when executing a GET or PUT request: ${e.message}`]},r=e.code,[i,o]=a[r]||["unexpected error",e.message];ale([i,o],"error",1)}async function req(e,a,r="json",i=null){try{let o={method:e,headers:{"Content-Type":"application/json",Authorization:`token ${token}`}};i&&(o.body=JSON.stringify(i));let l=await fetch(a,o),n={http:l};return"json"===r?n.data=await l.json():"blob"===r?n.data=await l.blob():"text"===r&&(n.data=await l.text()),n}catch(s){throw{code:"4000",message:s.message}}}async function downZip(e){try{let a=await req("GET",e,"json");if(200===a.http.status){if(""===a.content){if(aletxt("Processing","Large file. Wait for download to complete..."),a=await req("GET",a.data.giturl,"json"),!0===a.http.ok)t.gitarchive=a.data;else throw{arch:2,res:a}}else t.gitarchive=a.data.content;t.gitformat="base"}else throw{arch:1,res:a}}catch(r){if(r.message)throw{code:2004,message:r.message};let i=r.res.http,o=r.res.data;if(404===i.status)throw 1===r.arch?{code:2e3}:{code:2001};if(401===i.status)throw document.querySelector('label[for="gittoken"] .inputlabel').classList.add("errlabel"),{code:401};{let l=o.message||i.statusText||i.status;throw 1===r.arch?{code:2002,message:l}:{code:2003,message:l}}}}async function readZip(e){aletxt("Processing","Opening archive...");let a={};"buffer"===t.gitformat?a={binary:!0}:"base"===t.gitformat&&(a={base64:!0});try{zipFile=await e.loadAsync(t.gitarchive,a)}catch(r){if(r.message.includes("Can't find end of central directory")||r.message.includes("Corrupted zip ?"))throw{code:3401};throw{code:3400,message:r.message}}}async function uploadZip(){try{let e=0;for(let[a,r]of(countfile=Object.keys(zipFile.files).length,ale(["Archive upload",`Please wait, do not close the tab... <span>0</span>/${countfile}`]),Object.entries(zipFile.files)))if(e++,!1===r.dir){let i=t.unzippath?`${t.unzippath}/${a}`:a,o=await r.async("base64"),l=await req("PUT",`${preurl}/${i}`,"json",{message:"unzipgit",content:o});if(422===l.http.status){if(l=await req("PUT",`${preurl}/${i}`,"json",{message:"unzipgit",content:o,sha:(await req("GET",`${preurl}/${i}`)).data.sha}),!1===l.http.ok)throw{action:"rewrite",res:l}}else if(!1===l.http.ok)throw{action:"write",res:l};q(".atn .info span").innerHTML=e}}catch(n){if(n.message)throw{code:2005,message:n.message};let s=n.res.http,c=n.res.data;if(401===s.status)throw document.querySelector('label[for="gittoken"] .inputlabel').classList.add("errlabel"),{code:401};{let d=c.message||s.statusText||s.status;throw{code:"write"===n.action?2006:2007,message:d}}}}function confirmExit(e){let a="unzipping is not over. leave the page?";return e.returnValue=a,a}q(".closer").addEventListener("click",()=>{atna.reverse()}),q("#unzip").addEventListener("input",async function(e){e.target.parentNode.querySelector(".errlabel")&&e.target.parentNode.querySelector(".errlabel").classList.remove("errlabel")}),q("#unzip").addEventListener("submit",async function(e){e.preventDefault(),window.addEventListener("beforeunload",confirmExit);try{this.querySelector("button").disabled=!0,ale(["Processing","Wait for completion..."]);let a=!0,r=new FormData(this);for(let[i,o]of r.entries())t[i]=o,""===o&&"gitfilepath"!==i&&"gitfile"!==i&&(document.querySelector(`label[for="${i}"] .inputlabel`).classList.add("errlabel"),a=!1);if(!a)throw{code:1422};if(token=t.gittoken,t.gitrepo.includes("/")||t.gitrepo.includes("\\")){let l=t.gitrepo.replace(/\\+|\/\/+/g,"/").match(/[\/]?([^\/]+)[\/](.*?)[\/]?$/);t.unzippath=l[2],t.gitrepo=l[1]}let n=await req("GET",`${preurl=`https://api.github.com/repos/${t.gitname}/${t.gitrepo}/contents`}`,"info");if(!1===n.http.ok)throw{code:n.http.status};if(""===t.gitfilepath){if(t.gitfile.size>0)t.gitarchive=await t.gitfile.arrayBuffer(),t.gitformat="buffer";else throw document.querySelector('label[for="gitfilepath"] .inputlabel').classList.add("errlabel"),document.querySelector('label[for="gitfile"] .inputlabel').classList.add("errlabel"),{code:1422}}else aletxt("Processing","Downloading archive from repository..."),await downZip(`${preurl}/${t.gitfilepath.replace(/\\+|\/\/+/g,"/").replace(/^\/+|\/+$/g,"")}`);await readZip(new JSZip),await uploadZip(),q("#gitfilepath").value="",q("#gitfilepath").dispatchEvent(new Event("blur")),q("#gitfile").value="",tl.reverse(),gsap.to('label[for="gitfile"]',.25,{opacity:1}),gsap.to('label[for="gitfilepath"]',.25,{opacity:1}),ale(["Success",`All files are unzipped. <a href="https://github.com/${t.gitname}/${t.gitrepo}">Go to repository</a>`],"success",1)}catch(s){errorHandler(s)}finally{this.querySelector("button").disabled=!1,window.removeEventListener("beforeunload",confirmExit)}}),window.onload=function(){q("#unzip").reset(),gsaploading.play()};